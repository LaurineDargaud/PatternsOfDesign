
${inputFile:Chapters/Introduction/Introduction.pillar}$

${inputFile:Chapters/DoubleDispatch/DoubleDispatch.pillar}$
${inputFile:Chapters/PaperStoneScissor/PaperStoneScissor.pillar}$


${inputFile:Chapters/Visitor/Visitor.pillar}$

!! Playing with Visitors
Here I should take the slides flow from the design mooc lectures. 


!! Playing with Interpreters

Returning an integer is not really nice because we cross boundaries.
Visitor then after I should make sure that we only return expressions
of the same domain and with a stack.


!!! Using the Pharo execution stack

[[[
EEvaluator >> visitMultiplication: aMultiplication
	^ (EConstant new
		value: (self evaluate: aMultiplication left) * 
					(self evaluate: aMultiplication right)  
]]]

!!! With an explicit interpretation  stack
[[[
EEvaluator >> visitMultiplication: aMultiplication
	self evaluate: aMultiplication left.
	self evaluate: aMultiplication right.
	self push: (EConstant new
					value: self pop value * self pop value)  
]]]

!! Beacon

!! Parsing alain?

!!  Uno 

*https://github.com/cdlm/kata-uno*

!! Ideas
Lire
- Implement sokoban

- Ants
- Parser
- Implementation turtle

